plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'com.tools'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url 'https://repo.mongodb.org/maven2/' }
}

dependencies {
    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"

    implementation 'org.mongodb:mongodb-driver-sync:3.12.11'
    implementation 'com.google.code.gson:gson:2.8.9'
}

shadowJar {
    // Переносим классы MongoDB
    relocate 'com.mongodb', 'com.tools.cookieTycoon.shaded.mongodb'

    // Убедитесь, что все зависимости включены
    configurations = [project.configurations.runtimeClasspath]

    // Имя выходного файла
    archiveFileName = "${project.name}-${project.version}-shaded.jar"
}

build.dependsOn shadowJar

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.16")
    }
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
